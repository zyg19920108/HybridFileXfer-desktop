import win.ui;
import java;
import console;
import preg;
import console;
import win;
import inet.stat;
import process;
/*DSG{{*/
mainForm = win.form(text="多轨快传GUI";right=759;bottom=231)
mainForm.add(
plus1={cls="plus";text="未连接";left=133;top=15;right=214;bottom=37;border={color=-16777216;width=1};forecolor=16777215;z=1};
static1={cls="static";text="手机连接状态";left=0;top=17;right=128;bottom=37;align="center";center=1;font=LOGFONT(h=-20;name='楷体');transparent=1;z=2}
)
/*}}*/

console.open()
mainForm.show();
import godking.skin

jarpath = io.fullpath("\java\HybridFileXfer.jar")
var prcs = java.popenProcess(
    "-jar", //运行jar
    jarpath, "-c", "adb"
);
// 设置初始皮肤样式为灰色
godking.skin.setGray(mainForm.plus1);
// 解析进度信息的函数
function 获取进度(str) {
    var progressRegex = preg("\[(\d+)MB-(\d+)MB\/(\d+)MB\]");
    var start, finish, totle = progressRegex.match(str);
    if (finish) {
        var 进度 = tonumber(finish) / tonumber(totle) * 100;
        return math.round(进度, 2);
    }
    else {
        return 0;
    }
}

// 更新状态函数
function 更新状态(text, skinStyle) {
    mainForm.plus1.text = text;
    if (skinStyle == "red") {
        godking.skin.setRed(mainForm.plus1);
    }
    elseif(skinStyle == "green") {
        godking.skin.setGreen(mainForm.plus1);
    }
    elseif(skinStyle == "gray") {
        godking.skin.setGray(mainForm.plus1);
    }
}

// 检测输出并处理逻辑
function 检测输出(out) {
    if (string.cmpMatch(out, "控制通道连接到手机失败，请检查手机的服务端是否启动？")) {
        更新状态("连接失败", "red");
        win.msgbox("连接失败！请检查APP！");
    }
    elseif(string.cmpMatch(out, "传输通道已全部连接完成")) {
        更新状态("连接成功", "green");
    }
    elseif(string.cmpMatch(out, "5740 端口转发成功") and #inet.stat(5740).tcp >= 2) {
        更新状态("连接成功", "green");
    }
    elseif(string.cmpMatch(out, "传输已中断")) {
        win.msgbox("通道中断，请重新连接！");
    }
    elseif(string.cmpMatch(out, "MB")) {
        var 进度百分比 = 获取进度(out);
        console.log("进度:" + 进度百分比 + "%");
    }
}

// 主循环：处理 Java 程序的输出
for (all, out, err in prcs.each()) {
	console.log(out)
    检测输出(out); // 处理输出逻辑   
}

// 进入消息循环
win.loopMessage();
